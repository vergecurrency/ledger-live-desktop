// @flow
import React from 'react'
import type { Props } from './'

type ColorProps = {
  color: string,
}

type ChildrenProps = {
  children?: any,
}

type ActionProps = {
  action: 'left' | 'accept',
}

type RejectedProps = {
  rejected?: boolean,
}

const LeftHint = () => (
  <g transform="translate(120)">
    <circle
      className="nanox__pulsing"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle
      className="nanox__pulsing nanox__delay"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle
      className="nanox__pulsing nanox__delay-two"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle cx="5" cy="66" r="2" fill="#4B84FF" stroke="#4B84FF" strokeWidth=".8" />
    <path fill="url(#hints)" fillRule="nonzero" d="M5.5 64h-1V0h1z" />
  </g>
)

const RightHint = () => (
  <g transform="translate(230)">
    <circle
      className="nanox__pulsing"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle
      className="nanox__pulsing nanox__delay"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle
      className="nanox__pulsing nanox__delay-two"
      cx="5"
      cy="66"
      r="5.265"
      fill="#4B84FF"
      fillOpacity=".2"
      stroke="#4B84FF"
      strokeOpacity=".6"
      strokeWidth=".531"
    />
    <circle cx="5" cy="66" r="2" fill="#4B84FF" stroke="#4B84FF" strokeWidth=".8" />
    <circle cx="5" cy="66" r="2" fill="#4B84FF" stroke="#4B84FF" strokeWidth=".8" />
    <path fill="url(#hints)" fillRule="nonzero" d="M5.5 64h-1V0h1z" />
  </g>
)

const Hints = ({ action, color }: ColorProps & ActionProps) => (
  <>
    <defs>
      <linearGradient id="hints" x1="50%" x2="50%" y1="0%" y2="100%">
        <stop offset="0%" stopColor={color} stopOpacity="0" />
        <stop offset="100%" stopColor={color} />
      </linearGradient>
    </defs>
    {action === 'accept' ? (
      <>
        <LeftHint />
        <RightHint />
      </>
    ) : action === 'left' ? (
      <LeftHint />
    ) : null}
  </>
)

const Usb = () => (
  <>
    <defs>
      <linearGradient id="usb" x1="50%" x2="50%" y1="98.633%" y2="0%">
        <stop offset="0%" stopColor="#FFF" />
        <stop offset="100%" stopColor="#142533" />
      </linearGradient>
    </defs>
    <g transform="translate(2, 45)" fillRule="nonzero">
      <path
        fill="url(#usb)"
        d="M10.778 52H9v2h1.778v-2zm0 0h-.89.89zm0 50v-2H9v2h1.778zM9 52h1.778v50H9V52zm7.111 0H17v2h-1.778v-2H17h-.889zM17 102v-2h-1.778v2H17zm-1.778-50H17v50h-1.778V52z"
        transform="matrix(0 -1 -1 0 100 34)"
      />
      <path
        fill="#142533"
        d="M60 25H48v-8h12v8zm2 2V15H47.2a1.2 1.2 0 0 0-1.2 1.2v9.6a1.2 1.2 0 0 0 1.2 1.2H62z"
      />
      <path
        fill="#142533"
        d="M98 31.6a.4.4 0 0 1-.4.4H67.2a5.2 5.2 0 0 1-5.2-5.2V15.2a5.2 5.2 0 0 1 5.2-5.2h30.4c.22 0 .4.18.4.4v21.2zm2 0V10.4A2.4 2.4 0 0 0 97.6 8H67.2a7.2 7.2 0 0 0-7.2 7.2v11.6a7.2 7.2 0 0 0 7.2 7.2h30.4a2.4 2.4 0 0 0 2.4-2.4z"
      />
    </g>
  </>
)

const UsbConnecting = () => (
  <>
    <defs>
      <linearGradient id="nanox-connecting" x1="50%" x2="50%" y1="98.633%" y2="0%">
        <stop offset="0%" stopColor="#FFF" stopOpacity="0" />
        <stop offset="100%" stopColor="#142533" />
      </linearGradient>
    </defs>
    <g transform="translate(-28 45)">
      <g fillRule="nonzero">
        <path
          fill="url(#nanox-connecting)"
          d="M8.308 48h1.64v83.077h-1.64V48zm5.743 0h1.641v83.077h-1.64V48z"
          transform="scale(1 -1) rotate(90 81.538 48)"
        />
        <path
          fill="#142533"
          d="M92.615 25.23H81.538v-7.384h11.077v7.385zm1.847 1.847V16H80.8c-.612 0-1.108.496-1.108 1.108v8.861c0 .612.496 1.108 1.108 1.108h13.662z"
        />
        <path
          fill="#142533"
          d="M127.692 31.323a.37.37 0 0 1-.369.37H99.262a4.8 4.8 0 0 1-4.8-4.8V16.184a4.8 4.8 0 0 1 4.8-4.8h28.061a.37.37 0 0 1 .37.369v19.57zm1.846 0v-19.57a2.215 2.215 0 0 0-2.215-2.215H99.262a6.646 6.646 0 0 0-6.647 6.647v10.707a6.646 6.646 0 0 0 6.647 6.646h28.061a2.215 2.215 0 0 0 2.215-2.215z"
        />
      </g>
      <g transform="matrix(-1 0 0 1 42 10)">
        <ellipse
          cx="10.299"
          cy="10.45"
          fill="#6490F1"
          stroke="#6490F1"
          strokeOpacity=".4"
          strokeWidth="3.208"
          rx="11.903"
          ry="12.013"
        />
        <g stroke="#FFF" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.8">
          <path d="M14.345 10.58H6.253M9.471 13.832L6.253 10.58M9.471 7.327L6.253 10.58" />
        </g>
      </g>
    </g>
  </>
)

const UsbDisconnecting = () => (
  <>
    <defs>
      <linearGradient id="nanox-disconnecting" x1="50%" x2="50%" y1="98.633%" y2="0%">
        <stop offset="0%" stopColor="#FFF" stopOpacity="0" />
        <stop offset="100%" stopColor="#142533" />
      </linearGradient>
    </defs>
    <g transform="translate(-48 45)">
      <g fillRule="nonzero">
        <path
          fill="url(#nanox-disconnecting)"
          d="M8.308 48h1.64v83.077h-1.64V48zm5.743 0h1.641v83.077h-1.64V48z"
          transform="matrix(0 -1 -1 0 130.077 32)"
        />
        <path
          fill="#142533"
          d="M93.154 23.692H82.077v-7.384h11.077v7.384zM95 25.538V14.462H81.338c-.611 0-1.107.495-1.107 1.107v8.862c0 .612.496 1.107 1.107 1.107H95z"
        />
        <path
          fill="#142533"
          d="M128.23 29.785a.37.37 0 0 1-.368.369H99.8a4.8 4.8 0 0 1-4.8-4.8V14.646a4.8 4.8 0 0 1 4.8-4.8h28.062a.37.37 0 0 1 .369.37v19.569zm1.847 0v-19.57A2.215 2.215 0 0 0 127.862 8H99.8a6.646 6.646 0 0 0-6.646 6.646v10.708A6.646 6.646 0 0 0 99.8 32h28.062a2.215 2.215 0 0 0 2.215-2.215z"
        />
      </g>
      <g strokeWidth="1.5">
        <path stroke="#000" d="M129.154 13.538h10a2 2 0 0 1 2 2v8.924a2 2 0 0 1-2 2h-10V13.538z" />
        <path stroke="#142533" strokeLinecap="round" d="M132.385 17.949h5.67M132.385 22.564h5.67" />
      </g>
      <g transform="translate(44 10)">
        <ellipse
          cx="10.299"
          cy="10.45"
          fill="#6490F1"
          stroke="#6490F1"
          strokeOpacity=".4"
          strokeWidth="3.208"
          rx="11.903"
          ry="12.013"
        />
        <g stroke="#FFF" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.8">
          <path d="M14.345 10.58H6.253M9.471 13.832L6.253 10.58M9.471 7.327L6.253 10.58" />
        </g>
      </g>
    </g>
  </>
)

const EmptyScreen = ({ color, children = null }: ColorProps & ChildrenProps) => (
  <g transform="translate(142 51)">
    <rect
      width="65"
      height="29"
      x=".5"
      y=".5"
      fill="#FFF"
      fillOpacity=".8"
      stroke={color}
      strokeOpacity=".2"
      rx="2"
    />
    {children}
  </g>
)

const ValidationScreen = ({ color }: ColorProps) => (
  <EmptyScreen color={color}>
    <g transform="translate(25 7)">
      <mask id="d" fill="#fff">
        <path
          id="validate"
          d="M13.62 2.608l-8.22 8.22-3.02-3.02a.375.375 0 0 0-.53 0l-.884.884a.375.375 0 0 0 0 .53l4.169 4.17a.375.375 0 0 0 .53 0l9.37-9.37a.375.375 0 0 0 0-.53l-.884-.884a.375.375 0 0 0-.53 0z"
        />
      </mask>
      <g fill="#66BE54" mask="url(#d)">
        <path d="M0 0h16v16H0z" />
      </g>
    </g>
  </EmptyScreen>
)

const PinScreen = ({ color }: ColorProps) => (
  <EmptyScreen color={color}>
    <g transform="translate(13 11)">
      <rect width="40" height="8" fill={color} fillRule="nonzero" rx=".8" />
      <path
        fill="#FFF"
        d="M5.7 4.408c0 .03-.027.054-.059.054H5.05a.06.06 0 0 0-.056.035.053.053 0 0 0 .013.061l.417.386c.012.01.019.025.019.04s-.007.029-.019.04l-.239.222a.067.067 0 0 1-.085 0l-.417-.386a.064.064 0 0 0-.066-.012.056.056 0 0 0-.037.051v.546c0 .031-.027.056-.061.056h-.338c-.034 0-.061-.025-.061-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.065.011l-.418.386a.067.067 0 0 1-.085 0l-.239-.223a.053.053 0 0 1-.018-.04c0-.014.007-.028.018-.039l.418-.386a.053.053 0 0 0 .012-.06.06.06 0 0 0-.055-.035h-.59a.061.061 0 0 1-.042-.016A.052.052 0 0 1 3 4.408v-.315c0-.015.006-.029.018-.039a.061.061 0 0 1 .043-.015h.59a.06.06 0 0 0 .054-.035.053.053 0 0 0-.012-.06l-.418-.387a.053.053 0 0 1-.018-.04c0-.014.007-.029.018-.039l.237-.223a.067.067 0 0 1 .085 0l.418.386c.017.016.043.02.065.012a.056.056 0 0 0 .038-.051v-.546c0-.03.027-.056.06-.056h.347c.034 0 .06.025.06.056v.546c.001.022.016.043.038.051a.064.064 0 0 0 .066-.012l.417-.386a.067.067 0 0 1 .085 0l.24.223c.011.01.018.025.018.04 0 .014-.007.029-.019.039l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .056.036h.591c.033 0 .059.024.059.054l-.006.315zm4.456 0c0 .03-.028.055-.06.054h-.59a.06.06 0 0 0-.055.035.053.053 0 0 0 .013.061l.417.386a.055.055 0 0 1 0 .08l-.241.222a.067.067 0 0 1-.085 0l-.417-.386a.064.064 0 0 0-.066-.012.056.056 0 0 0-.038.051v.546c0 .03-.026.055-.058.056h-.34c-.034 0-.06-.026-.06-.056v-.546a.056.056 0 0 0-.037-.05.064.064 0 0 0-.066.011l-.417.386a.067.067 0 0 1-.085 0l-.241-.223a.055.055 0 0 1 0-.079l.417-.386a.053.053 0 0 0 .013-.06.06.06 0 0 0-.055-.035h-.59c-.033 0-.06-.025-.06-.055v-.315c0-.03.027-.054.06-.054h.59a.06.06 0 0 0 .055-.035.053.053 0 0 0-.013-.06l-.417-.387a.055.055 0 0 1 0-.079l.241-.223a.067.067 0 0 1 .085 0l.417.386c.018.016.043.02.066.012a.056.056 0 0 0 .038-.051v-.546c0-.03.025-.055.058-.056h.34c.033.001.06.026.06.056v.546c0 .022.014.043.037.051a.064.064 0 0 0 .066-.012l.417-.386a.067.067 0 0 1 .085 0l.24.223a.055.055 0 0 1 0 .079l-.416.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .055.036h.59c.032 0 .06.024.06.054v.315zm4.449 0a.052.052 0 0 1-.018.04.061.061 0 0 1-.043.014h-.59a.06.06 0 0 0-.055.035.053.053 0 0 0 .013.061l.417.386a.053.053 0 0 1 0 .079l-.237.223a.067.067 0 0 1-.085 0l-.417-.386a.064.064 0 0 0-.066-.012.056.056 0 0 0-.037.051v.546c0 .031-.027.056-.061.056h-.346c-.034 0-.061-.025-.061-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.065.011l-.418.386a.067.067 0 0 1-.085 0l-.239-.223a.053.053 0 0 1-.018-.04c0-.014.007-.028.018-.039l.418-.386a.053.053 0 0 0 .012-.06.06.06 0 0 0-.055-.035h-.585c-.033 0-.059-.025-.059-.055v-.315c0-.03.026-.054.059-.054h.591a.06.06 0 0 0 .055-.035.053.053 0 0 0-.012-.06l-.418-.387a.053.053 0 0 1-.018-.04c0-.014.007-.029.018-.039l.24-.223a.067.067 0 0 1 .084 0l.418.386c.017.016.043.02.065.012a.056.056 0 0 0 .038-.051v-.546c0-.03.027-.056.06-.056h.339c.033 0 .06.025.06.056v.546c.001.022.016.043.038.051a.064.064 0 0 0 .066-.012l.417-.386a.067.067 0 0 1 .085 0l.24.223c.01.01.017.025.017.04 0 .014-.006.029-.018.039l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .056.036h.589c.016 0 .031.005.043.015.011.01.018.024.018.04v.314zm4.448 0c0 .03-.026.054-.059.054h-.591a.06.06 0 0 0-.055.035.053.053 0 0 0 .012.061l.418.386c.011.01.018.025.018.04s-.007.029-.018.04l-.24.222a.067.067 0 0 1-.084 0l-.418-.386a.064.064 0 0 0-.065-.012.056.056 0 0 0-.038.051v.546c0 .031-.027.056-.06.056h-.339c-.033 0-.06-.025-.06-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.066.011l-.417.386a.067.067 0 0 1-.085 0l-.24-.223a.053.053 0 0 1-.017-.04c0-.014.006-.028.018-.039l.417-.386a.053.053 0 0 0 .013-.06.06.06 0 0 0-.055-.035h-.59a.061.061 0 0 1-.043-.016.052.052 0 0 1-.018-.039v-.315c0-.015.007-.029.018-.039a.061.061 0 0 1 .043-.015h.59a.06.06 0 0 0 .055-.035.053.053 0 0 0-.013-.06l-.417-.387a.053.053 0 0 1-.018-.04c0-.014.006-.029.018-.039l.237-.223a.067.067 0 0 1 .085 0l.417.386c.017.016.043.02.066.012a.056.056 0 0 0 .037-.051v-.546c0-.03.028-.056.061-.056h.346c.034 0 .061.025.061.056v.546c0 .022.015.043.038.051a.064.064 0 0 0 .065-.012l.418-.386a.067.067 0 0 1 .085 0l.239.223c.011.01.018.025.018.04 0 .014-.007.029-.018.039l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .055.036H19c.033 0 .06.024.06.054l-.007.315zm4.457 0c-.001.03-.028.055-.061.054h-.59a.06.06 0 0 0-.055.035.053.053 0 0 0 .013.061l.417.386a.055.055 0 0 1 0 .08l-.24.222a.067.067 0 0 1-.086 0l-.417-.386a.064.064 0 0 0-.066-.012.056.056 0 0 0-.037.051v.546c0 .03-.026.055-.06.056h-.34c-.032 0-.058-.026-.058-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.065.011l-.418.386a.067.067 0 0 1-.085 0l-.24-.223a.055.055 0 0 1 0-.079l.417-.386a.053.053 0 0 0 .012-.06.06.06 0 0 0-.055-.035h-.59c-.032 0-.059-.025-.06-.055v-.315c.001-.03.028-.054.06-.054h.59a.06.06 0 0 0 .055-.035.053.053 0 0 0-.012-.06l-.418-.387a.055.055 0 0 1 0-.079l.241-.223a.067.067 0 0 1 .085 0l.418.386c.017.016.043.02.065.012a.056.056 0 0 0 .038-.051v-.546c0-.03.026-.055.059-.056h.34c.033.001.059.026.059.056v.546c0 .022.015.043.037.051a.064.064 0 0 0 .066-.012l.417-.386a.067.067 0 0 1 .085 0l.241.223a.055.055 0 0 1 0 .079l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .056.036h.589c.033 0 .06.024.06.054v.315zm4.448 0a.052.052 0 0 1-.018.04.061.061 0 0 1-.043.014h-.589a.06.06 0 0 0-.055.035.053.053 0 0 0 .012.061l.418.386c.011.01.018.025.018.04s-.007.029-.018.04l-.237.222a.067.067 0 0 1-.085 0l-.418-.386a.064.064 0 0 0-.065-.012.056.056 0 0 0-.038.051v.546c0 .031-.027.056-.06.056h-.347c-.034 0-.06-.025-.06-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.066.011l-.417.386a.067.067 0 0 1-.085 0l-.24-.223a.053.053 0 0 1-.018-.04c0-.014.007-.028.019-.039l.417-.386a.053.053 0 0 0 .013-.06.06.06 0 0 0-.056-.035h-.585c-.032 0-.059-.025-.059-.055v-.315c0-.03.027-.054.06-.054h.59a.06.06 0 0 0 .056-.035.053.053 0 0 0-.013-.06l-.417-.387a.053.053 0 0 1-.018-.04c0-.014.006-.029.018-.039l.239-.223a.067.067 0 0 1 .085 0l.417.386c.017.016.043.02.066.012a.056.056 0 0 0 .037-.051v-.546c0-.03.028-.056.061-.056h.338c.034 0 .061.025.061.056v.546c0 .022.015.043.038.051a.064.064 0 0 0 .065-.012l.418-.386a.067.067 0 0 1 .085 0l.239.223c.011.01.018.025.018.04 0 .014-.007.029-.018.039l-.418.386a.053.053 0 0 0-.012.06.06.06 0 0 0 .055.036h.59c.015 0 .03.005.042.015.012.01.018.024.018.04v.314zm4.449 0a.052.052 0 0 1-.018.04.061.061 0 0 1-.043.014h-.59a.06.06 0 0 0-.055.035.053.053 0 0 0 .013.061l.417.386a.053.053 0 0 1 0 .079l-.237.223a.067.067 0 0 1-.085 0l-.417-.386a.064.064 0 0 0-.066-.012.056.056 0 0 0-.037.051v.546c0 .031-.028.056-.061.056h-.347c-.033 0-.06-.025-.06-.056v-.546a.056.056 0 0 0-.038-.05.064.064 0 0 0-.066.011l-.417.386a.067.067 0 0 1-.085 0l-.239-.223a.053.053 0 0 1-.018-.04c0-.014.006-.028.018-.039l.417-.386a.053.053 0 0 0 .013-.06.06.06 0 0 0-.055-.035h-.586c-.032 0-.058-.025-.058-.055v-.315c0-.03.026-.054.058-.054h.592a.06.06 0 0 0 .055-.035.053.053 0 0 0-.013-.06l-.417-.387a.053.053 0 0 1-.018-.04c0-.014.007-.029.018-.039l.24-.223a.067.067 0 0 1 .084 0l.417.386c.018.016.044.02.066.012a.056.056 0 0 0 .038-.051v-.546c0-.03.027-.056.06-.056h.339c.033 0 .06.025.06.056v.546c0 .022.016.043.038.051a.064.064 0 0 0 .066-.012l.417-.386a.067.067 0 0 1 .085 0l.24.223c.01.01.017.025.017.04 0 .014-.006.029-.018.039l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .055.036h.59c.016 0 .031.005.043.015.011.01.018.024.018.04v.314zm4.448 0a.052.052 0 0 1-.018.04.061.061 0 0 1-.043.014h-.59a.06.06 0 0 0-.055.035.053.053 0 0 0 .013.061l.417.386c.012.01.019.025.019.04s-.007.029-.019.04l-.236.222a.067.067 0 0 1-.086 0l-.417-.386a.064.064 0 0 0-.065-.012.056.056 0 0 0-.038.051v.546c0 .031-.027.056-.06.056h-.347c-.034 0-.06-.025-.06-.056v-.546a.056.056 0 0 0-.039-.05.064.064 0 0 0-.065.011l-.417.386a.067.067 0 0 1-.085 0l-.24-.223a.053.053 0 0 1-.018-.04c0-.014.007-.028.019-.039l.417-.386a.053.053 0 0 0 .013-.06.06.06 0 0 0-.056-.035h-.585c-.033 0-.059-.025-.059-.055v-.315c0-.03.026-.054.059-.054h.591a.06.06 0 0 0 .056-.035.053.053 0 0 0-.013-.06l-.417-.387a.053.053 0 0 1-.019-.04c0-.014.007-.029.019-.039l.239-.223a.067.067 0 0 1 .085 0l.417.386c.017.016.043.02.066.012a.056.056 0 0 0 .037-.051v-.546c0-.03.027-.056.06-.056h.34c.033 0 .06.025.06.056v.546c0 .022.015.043.038.051a.064.064 0 0 0 .065-.012l.417-.386a.067.067 0 0 1 .086 0l.238.223c.012.01.019.025.019.04 0 .014-.007.029-.019.039l-.417.386a.053.053 0 0 0-.013.06.06.06 0 0 0 .056.036h.59c.015 0 .03.005.042.015.011.01.018.024.018.04v.314z"
      />
    </g>
  </EmptyScreen>
)

const HomeScreen = ({ color }: ColorProps) => (
  <EmptyScreen color={color}>
    <g transform="translate(25 7)">
      <mask id="f" fill="#fff">
        <path
          id="home"
          d="M2.75 6.367v6.966c0 .322.261.584.583.584h9.334a.583.583 0 0 0 .583-.584V6.367L8 2.283 2.75 6.367zm-1.21-.959l6-4.667a.75.75 0 0 1 .92 0l6 4.667a.75.75 0 0 1 .29.592v7.333c0 1.15-.933 2.084-2.083 2.084H3.333a2.083 2.083 0 0 1-2.083-2.084V6a.75.75 0 0 1 .29-.592zM6.75 8.75v5.917a.75.75 0 0 1-1.5 0V8A.75.75 0 0 1 6 7.25h4a.75.75 0 0 1 .75.75v6.667a.75.75 0 0 1-1.5 0V8.75h-2.5z"
        />
      </mask>
      <g fill={color} mask="url(#f)">
        <path d="M0 0h16v16H0z" />
      </g>
    </g>
  </EmptyScreen>
)

const ErrorScreen = ({ color, rejected = false }: ColorProps & RejectedProps) => (
  <>
    <EmptyScreen color={color}>
      {rejected ? (
        <g transform="translate(25 7)">
          <mask id="cross-mask" fill="#fff">
            <path
              id="cross"
              d="M9.372 8l4.506-4.506a.416.416 0 0 0 0-.59l-.783-.782a.416.416 0 0 0-.589 0L8 6.628 3.494 2.122a.416.416 0 0 0-.59 0l-.782.783a.416.416 0 0 0 0 .589L6.628 8l-4.506 4.506a.416.416 0 0 0 0 .59l.783.782a.416.416 0 0 0 .589 0L8 9.372l4.506 4.506a.416.416 0 0 0 .59 0l.782-.783a.416.416 0 0 0 0-.589L9.372 8z"
            />
          </mask>
          <g fill={color} mask="url(#cross-mask)">
            <path d="M0 0h16v16H0z" />
          </g>
        </g>
      ) : null}
    </EmptyScreen>
    <g transform="translate(354 32)">
      <path
        fill="#FFF"
        fillRule="nonzero"
        d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"
      />
      <mask id="circle-mask" fill="#fff">
        <path
          id="circle"
          d="M16 28c6.627 0 12-5.373 12-12S22.627 4 16 4 4 9.373 4 16s5.373 12 12 12z"
        />
      </mask>
      <g fill={color} mask="url(#circle-mask)">
        <path d="M0 0h32v32H0z" />
      </g>
    </g>
    {rejected ? (
      <g transform="translate(364 42)">
        <mask id="smallcross-mask" fill="#fff">
          <path
            id="smallcross"
            d="M7.029 6l3.38-3.38a.312.312 0 0 0 0-.441l-.588-.587a.312.312 0 0 0-.441 0L6 4.972l-3.38-3.38a.312.312 0 0 0-.441 0l-.587.587a.312.312 0 0 0 0 .441L4.972 6l-3.38 3.38a.312.312 0 0 0 0 .441l.587.587c.122.123.32.123.441 0L6 7.028l3.38 3.38c.122.123.32.123.441 0l.587-.587a.312.312 0 0 0 0-.441L7.028 6z"
          />
        </mask>
        <g fill="#FFF" mask="url(#smallcross-mask)">
          <path d="M0 0h11.5v11.5H0z" />
        </g>
      </g>
    ) : (
      <g transform="translate(362 40)">
        <mask id="exclamation-mask" fill="#fff">
          <path
            id="exclamation"
            d="M8 2a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1zm0 12a1.2 1.2 0 1 1 0-2.4A1.2 1.2 0 0 1 8 14z"
          />
        </mask>
        <path
          fill="#FFF"
          id="exclamation"
          d="M8 2a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1zm0 12a1.2 1.2 0 1 1 0-2.4A1.2 1.2 0 0 1 8 14z"
        />
        <g fill="#FFF" mask="url(#exclamation-mask)">
          <path d="M0 0h16v16H0z" />
        </g>
      </g>
    )}
  </>
)

const Frame = ({ color }: ColorProps) => (
  <rect
    width="271.606"
    height="39.606"
    x="1.197"
    y="1.197"
    fill={color}
    fillOpacity=".12"
    stroke="#142533"
    strokeWidth="2.394"
    rx="6.227"
  />
)

const Swivel = () => (
  <path
    fill="#FFF"
    stroke="#142533"
    strokeWidth="2.394"
    d="M135 1.197c-10.937 0-19.803 8.866-19.803 19.803 0 10.937 8.866 19.803 19.803 19.803h135A2.803 2.803 0 0 0 272.803 38V4A2.803 2.803 0 0 0 270 1.197H135z"
  />
)

const RightButton = () => (
  <>
    <circle cx="135" cy="21" r="10.5" stroke="#142533" />
    <circle cx="135" cy="21" r="11.5" stroke="#D8D8D8" />
  </>
)

const LeftButton = ({ color }: ColorProps) => (
  <g>
    <circle cx="25" cy="21" r="10.5" stroke="#142533" />
    <circle cx="25" cy="21" r="11.5" stroke={color} strokeOpacity=".2" />
  </g>
)

const NanoX = ({ action, screen, error, width = 272, wire }: Props) => {
  const color = error ? '#EA2E49' : '#6490F1'
  const isRefusal = !!(error && error.name.startsWith('UserRefused'))

  return (
    <svg
      width={width}
      height={(width * 87) / 386}
      viewBox="0 0 386 87"
      style={{ overflow: 'visible' }}
    >
      <g fill="none" fillRule="evenodd">
        <g transform="translate(100 45)">
          <Frame color={color} />
          <Swivel />
          <LeftButton color={color} />
          <RightButton />
        </g>
        {/* displays usb cable */}
        {wire === 'wired' ? <Usb /> : null}
        {wire === 'disconnecting' ? <UsbDisconnecting /> : null}
        {wire === 'connecting' ? <UsbConnecting /> : null}

        {/* displays action button */}
        {action ? <Hints action={action} color={color} /> : null}

        {/* displays screen type */}
        {screen === 'home' ? (
          <HomeScreen color={color} />
        ) : screen === 'pin' ? (
          <PinScreen color={color} />
        ) : screen === 'validation' ? (
          <ValidationScreen color={color} />
        ) : (
          <EmptyScreen color={color} />
        )}

        {/* displays error */}
        {error ? <ErrorScreen rejected={isRefusal} color={color} /> : null}
      </g>
    </svg>
  )
}

export default NanoX
